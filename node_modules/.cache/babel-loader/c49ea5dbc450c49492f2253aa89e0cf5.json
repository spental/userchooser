{"ast":null,"code":"import _objectSpread from\"/Users/kyle/Desktop/userchooser/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kyle/Desktop/userchooser/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useTable,useFilters,useSortBy}from\"react-table\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Table(_ref){var columns=_ref.columns,data=_ref.data;// Create a state\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),filterNameInput=_useState2[0],setFilterNameInput=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),filterOccupationInput=_useState4[0],setFilterOccupationInput=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),filterLocationInput=_useState6[0],setFilterLocationInput=_useState6[1];// Use the useTable Hook to send the columns and data to build the table\nvar _useTable=useTable({columns:columns,data:data},useFilters,useSortBy// This plugin Hook will help to sort our table columns\n),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow,setFilter=_useTable.setFilter;var handleFilterChangeN=function handleFilterChangeN(e){var value=e.target.value||undefined;setFilter(\"name\",value);setFilterNameInput(value);};var handleFilterChangeO=function handleFilterChangeO(e){var value=e.target.value||undefined;setFilter(\"occupation\",value);setFilterOccupationInput(value);};var handleFilterChangeL=function handleFilterChangeL(e){var value=e.target.value||undefined;setFilter(\"location\",value);setFilterLocationInput(value);};/* \n    Render the UI for your table\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\n  */return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{value:filterNameInput,onChange:handleFilterChangeN,placeholder:\"Search Name\"}),/*#__PURE__*/_jsx(\"input\",{value:filterOccupationInput,onChange:handleFilterChangeO,placeholder:\"Search Role\"}),/*#__PURE__*/_jsx(\"input\",{value:filterLocationInput,onChange:handleFilterChangeL,placeholder:\"Search Location\"})]}),/*#__PURE__*/_jsxs(\"table\",_objectSpread(_objectSpread({},getTableProps()),{},{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps(column.getSortByToggleProps())),{},{className:column.isSorted?column.isSortedDesc?\"sort-desc\":\"sort-asc\":\"\",children:column.render(\"Header\")}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row,i){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render(\"Cell\")}));})}));})}))]}))]});}","map":{"version":3,"sources":["/Users/kyle/Desktop/userchooser/src/components/Table.js"],"names":["React","useState","useTable","useFilters","useSortBy","Table","columns","data","filterNameInput","setFilterNameInput","filterOccupationInput","setFilterOccupationInput","filterLocationInput","setFilterLocationInput","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","handleFilterChangeN","e","value","target","undefined","handleFilterChangeO","handleFilterChangeL","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\n\nexport default function Table({ columns, data }) {\n// Create a state\nconst [filterNameInput, setFilterNameInput] = useState(\"\");\nconst [filterOccupationInput, setFilterOccupationInput] = useState(\"\");\nconst [filterLocationInput, setFilterLocationInput] = useState(\"\");\n\n\n  // Use the useTable Hook to send the columns and data to build the table\n  const {\n    getTableProps, // table props from react-table\n    getTableBodyProps, // table body props from react-table\n    headerGroups, // headerGroups, if your table has groupings\n    rows, // rows for the table based on the data passed\n    prepareRow, \n    setFilter // Prepare the row (this function needs to be called for each row before getting the row props)\n  } = useTable(\n      {\n    columns,\n    data\n  },\n  useFilters,\n  useSortBy// This plugin Hook will help to sort our table columns\n  );\n\n  const handleFilterChangeN = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"name\", value);\n    setFilterNameInput(value);\n  };\n  const handleFilterChangeO = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"occupation\", value);\n    setFilterOccupationInput(value);\n  };\n  \n  const handleFilterChangeL = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"location\", value);\n    setFilterLocationInput(value);\n  };\n  \n  /* \n    Render the UI for your table\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\n  */\n return (\n  <>\n <div className=\"search\">\n<input\n                                value={filterNameInput}\n                                onChange={\n                                    handleFilterChangeN\n                                }\n                                placeholder={\"Search Name\"}\n                              /> \n<input\n                                value={filterOccupationInput}\n                                onChange={\n                                    handleFilterChangeO\n                                }\n                                placeholder={\"Search Role\"}\n                              /> \n<input\n                                value={filterLocationInput}\n                                onChange={\n                                    handleFilterChangeL\n                                }\n                                placeholder={\"Search Location\"}\n                              />\n</div> \n<table {...getTableProps()}>\n  <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? \"sort-desc\"\n                        : \"sort-asc\"\n                      : \"\"\n                  }\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      </>\n  );\n}"]},"metadata":{},"sourceType":"module"}